name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: csa
          MYSQL_PASSWORD: root
        ports:
          - "3306:3306"
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout le dépôt
        uses: actions/checkout@v3

      - name: Configuration de Docker Compose et dockerize
        run: |
          sudo apt-get -yqq install docker-compose
          docker-compose --version
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
          tar -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
          sudo mv dockerize /usr/local/bin/dockerize
          dockerize --version

      - name: Démarrer MySQL
        run: docker-compose -f docker-compose-mysql.yml up -d
        env:
          DOCKER_COMPOSE_VERSION: 1.29.2

      - name: Attendre que MySQL soit prêt
        run: |
          docker-compose -f docker-compose-mysql.yml logs -f | grep -q 'MySQL init process done'
          sleep 60  # Ajout de la temporisation

      - name: Afficher les journaux MySQL pendant 1 minute
        run: docker-compose -f docker-compose-mysql.yml logs mysql | cat

      - name: Démarrer le backend CSA
        run: docker-compose -f docker-compose-csa.yml up -d
        env:
          DOCKER_COMPOSE_VERSION: 1.29.2

      - name: Attendre que le backend CSA soit prêt
        run: |
          container_name=$(docker-compose -f docker-compose-csa.yml ps -q csa-backend)
          timeout=60
          while [ $timeout -gt 0 ]; do
            logs=$(docker logs $container_name 2>&1)
            echo "$logs"
            sleep 5
            ((timeout-=5))
          done
          echo "Affichage des journaux terminé."

      - name: Exécuter les tests
        run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -d '{
            "codeFormation": "L3INFO",
            "diplome": "L",
            "n0Annee": 3,
            "nomFormation": "Licence d'\''Informatique",
            "doubleDiplome": "N",
            "debutHabilitation": "2012-09-01T00:00:00Z",
            "finHabilitation": "2016-09-01T00:00:00Z"
          }' \
          http://localhost:8081/api/formation/create

      - name: Arrêter MySQL et le backend CSA
        run: docker-compose -f docker-compose-mysql.yml -f docker-compose-csa.yml down

      - name: Afficher les journaux du serveur MySQL
        run: docker-compose -f docker-compose-mysql.yml logs mysql

      - name: Informations de débogage
        run: |
          echo "Contenu du fichier Docker Compose MySQL :"
          cat docker-compose-mysql.yml
          echo "Contenu du fichier Docker Compose CSA :"
          cat docker-compose-csa.yml
          echo "Variables d'environnement :"
          printenv

      - name: Vérifier l'état des services Docker
        run: docker-compose -f docker-compose-mysql.yml -f docker-compose-csa.yml ps
