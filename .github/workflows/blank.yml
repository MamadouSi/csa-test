name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout le dépôt
        uses: actions/checkout@v3

      - name: Configuration de Docker Compose et dockerize
        run: |
          sudo apt-get -yqq install docker-compose
          docker-compose --version
          wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz
          tar -xzvf dockerize-linux-amd64-v0.6.1.tar.gz
          sudo mv dockerize /usr/local/bin/dockerize
          dockerize --version

      - name: Démarrer MySQL et CSA Backend
        run: |
          docker-compose up -d
          docker-compose ps

          # Obtenez l'adresse IP du conteneur GitLab Runner
          runner_ip=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $HOSTNAME)
          echo "Adresse IP du conteneur GitLab Runner: $runner_ip"

          # Remplacez localhost par l'adresse IP du conteneur GitLab Runner dans le fichier docker-compose.yml
          sed -i "s/localhost/$runner_ip/" docker-compose.yml

      - name: Afficher les journaux du serveur MySQL
        run: docker-compose logs mysql | (sleep 30 && cat)

      

      - name: Attendre que le backend CSA soit prêt
        run: |
          container_name=$(docker-compose ps -q csa-backend)
          timeout=60  # Définir une durée d'une minute
          while [ $timeout -gt 0 ]; do
            logs=$(docker logs $container_name 2>&1)
            echo "$logs"
            sleep 5
            ((timeout-=5))
          done
          echo "Affichage des journaux terminé."

      - name: Exécuter les tests
        run: |
          # Utilisez l'adresse IP du conteneur GitLab Runner dans l'URL
          curl -X POST \
          -H "Content-Type: application/json" \
          -d '{
            "codeFormation": "L3INFO",
            "diplome": "L",
            "n0Annee": 3,
            "nomFormation": "Licence d'\''Informatique",
            "doubleDiplome": "N",
            "debutHabilitation": "2012-09-01T00:00:00Z",
            "finHabilitation": "2016-09-01T00:00:00Z"
          }' \
          http://$runner_ip:8081/api/formation/create

      - name: Arrêter MySQL et CSA Backend
        run: docker-compose down

      - name: Afficher les journaux du serveur MySQL
        run: docker-compose logs mysql

      - name: Informations de débogage
        run: |
          echo "Contenu du fichier Docker Compose :"
          cat docker-compose.yml
          echo "Variables d'environnement :"
          printenv

      - name: Vérifier l'état des services Docker
        run: docker-compose ps

